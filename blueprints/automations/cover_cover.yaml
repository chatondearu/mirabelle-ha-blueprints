blueprint:
  name: "[CDA] ðŸªŸ Blind Cover Template"
  description: "Create a cover entity for a blind controlled by a single switch"
  domain: automation
  input:
    cover_name:
      name: "Cover Name"
      description: "Name of the cover entity (e.g., Living Room Blind)"
      selector:
        text:
    switch_entity:
      name: "Switch Entity"
      description: "The switch entity that controls the blind"
      selector:
        entity:
          domain: switch
    travel_time:
      name: "Travel Time"
      description: "Time in seconds for the blind to travel from fully closed to fully open"
      default: 30
      selector:
        number:
          min: 1
          max: 300
          step: 1

variables:
  cover_id: !input cover_name | lower | replace(' ', '_')
  position_helper: "input_text.{{ cover_id }}_position"
  direction_helper: "input_text.{{ cover_id }}_direction"

trigger: []

action:
  # Create input_text helpers
  - service: input_text.set_value
    data:
      entity_id: !input position_helper
      name: "{{ cover_name }} Position"
      initial: "0"

  - service: input_text.set_value
    data:
      entity_id: !input direction_helper
      name: "{{ cover_name }} Direction"
      initial: "stopped"

  # Create cover template configuration
  - service: homeassistant.reload_config_entry
    data:
      entry_id: !input cover_id

  # Create automation to track state
  - service: automation.reload
    data: {}

mode: single 